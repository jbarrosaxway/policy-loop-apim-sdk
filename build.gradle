plugins {
    id 'java'
}

group 'circuitloopfilter'
version '2.0.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// Configura√ß√£o din√¢mica do Axway API Gateway/Policy Studio
def axway_base = System.getProperty('axway.base', '/opt/Axway')
def apim_folder = "${axway_base}/apigateway/system"
def ps_folder = "${axway_base}/policystudio"

dependencies {
    // Axway API Gateway libs
    implementation fileTree(dir: "${apim_folder}/lib", include: '*.jar')
    implementation fileTree(dir: "${apim_folder}/lib/jce", include: '*.jar')
    implementation fileTree(dir: "${apim_folder}/lib/modules", include: '*.jar')
    implementation fileTree(dir: "${apim_folder}/lib/plugins", include: '*.jar')

    // Policy Studio libs
    implementation fileTree(dir: "${ps_folder}/plugins", include: '*.jar')

    // Detecta automaticamente o diret√≥rio do filterbase
    def pluginsDir = file("${ps_folder}/plugins")
    def filterbaseDir = pluginsDir.exists() ? pluginsDir.listFiles()?.find { it.isDirectory() && it.name.startsWith("com.vordel.rcp.filterbase") } : null
    if (filterbaseDir) {
        println "‚úÖ Filterbase folder detected: ${filterbaseDir.name}"
        implementation files("${ps_folder}/plugins/${filterbaseDir.name}")
    } else {
        println "‚ö†Ô∏è  Filterbase folder not found. Using pattern include."
        implementation fileTree(dir: "${ps_folder}/plugins", include: 'com.vordel.rcp.filterbase*/**')
    }
}

// Copia depend√™ncias de runtime para uma pasta local (usado pelos workflows de release)
tasks.register('copyExternalDependencies', Copy) {
    description = 'Copia depend√™ncias de runtime para a pasta dependencies'
    def dependenciesDir = file("dependencies")
    dependenciesDir.mkdirs()
    into dependenciesDir
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from configurations.runtimeClasspath
    rename { fileName -> "external-${fileName}" }
}

// Lista depend√™ncias de runtime (apoio √† inspe√ß√£o nos workflows)
tasks.register('listDependencies') {
    description = 'Lista as depend√™ncias do classpath de runtime'
    doLast {
        println "üìã Runtime classpath dependencies:"
        configurations.runtimeClasspath.each { file ->
            println "  - ${file.name}"
        }
    }
}

// Mant√©m o manifesto OSGi do bundle (usando a vers√£o do projeto)
jar {
    manifest {
        attributes(
            'Bundle-Name': 'Circuit Loop Filter',
            'Bundle-SymbolicName': 'rslr.circuit.loop;singleton:=true',
            'Bundle-Version': "${version}",
            'Bundle-Vendor': 'Axway, Inc.',
            'Bundle-ClassPath': '.',
            'Export-Package': 'rslr.circuit.loop',
            'Bundle-RequiredExecutionEnvironment': 'JavaSE-1.7',
            'Bundle-ManifestVersion': '2',
            'Require-Bundle': 'com.vordel.rcp.filterbase'
        )
    }
}
